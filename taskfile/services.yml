version: "3"

tasks:
  start-all:
    desc: "Start all local services (anvil, IPFS, WARG, Jaeger, prometheus)"
    cmds:
      - |
        set -e

        # if [ -f .env ] && grep -q '^TESTNET_RPC_URL=' .env; then
        #   TESTNET_RPC_URL=$(grep -E '^TESTNET_RPC_URL=' .env | cut -d '=' -f2- | tr -d '"')
        # else
        #   TESTNET_RPC_URL="https://ethereum-sepolia-rpc.publicnode.com"
        #   echo "No TESTNET_RPC_URL found in .env, using default ${TESTNET_RPC_URL}"
        # fi

        PORT=8545
        # MIDDLEWARE_IMAGE=ghcr.io/lay3rlabs/wavs-middleware:0.5.0-beta.10
        FORK_RPC_URL=${FORK_RPC_URL:-"${TESTNET_RPC_URL}"}
        DEPLOY_ENV=$(task get-deploy-status)

        ## == Base Anvil Testnet Fork ==
        if [ "$DEPLOY_ENV" = "TESTNET" ]; then
          echo "Running in testnet mode, nothing to do"
          exit 0
        fi

        if [ "$DEPLOY_ENV" = "LOCAL" ]; then
          # anvil --fork-url ${FORK_RPC_URL} --port ${PORT} &
          # removed the fork-url since this moved off of eigen and does not need (constantly hitting a Error: Failed to send transaction Context: - server returned an error response: error code -32003: Insufficient funds for gas * price + value)
          anvil --port $PORT &
          trap "killall anvil && echo -e '\nKilled anvil'" EXIT
          while ! cast block-number --rpc-url http://localhost:${PORT} > /dev/null 2>&1
          do
            sleep 0.25
          done

          FILES="-f docker-compose.yml" # -f telemetry/docker-compose.yml
          docker compose ${FILES} pull
          docker compose ${FILES} up --force-recreate -d
          trap "docker compose ${FILES} down --remove-orphans && docker kill wavs-1 wavs-aggregator-1 > /dev/null 2>&1 && echo -e '\nKilled IPFS + Local WARG, and wavs instances'" EXIT

          echo "Started..."
          wait
        fi

  stop-all:
    desc: "Stop all local services"
    cmds:
      - |
        echo "Stopping all services..."
        FILES="-f docker-compose.yml -f telemetry/docker-compose.yml"
        docker compose ${FILES} down --remove-orphans || true
        docker kill wavs-1 wavs-aggregator-1 > /dev/null 2>&1 || true
        pkill -f anvil || true
        echo "All services stopped"
